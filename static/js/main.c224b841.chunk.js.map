{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","tweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c224b841.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fBase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"container\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"authInput\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          className=\"authInput\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          className=\"authInput authSubmit\"\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span className=\"authSwitch\" onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"fBase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n\r\n    let provider;\r\n\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button className=\"authBtn\" onClick={onSocialClick} name=\"google\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button className=\"authBtn\" onClick={onSocialClick} name=\"github\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    console.log(ok);\r\n    if (ok) {\r\n      // delete tweet\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form className=\"container tweetEdit\" onSubmit={onSubmit}>\r\n                <input\r\n                  className=\"formInput\"\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your tweet\"\r\n                  value={newTweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                />\r\n                <input className=\"formBtn\" type=\"submit\" value=\"Update Tweet\" />\r\n              </form>\r\n              <button className=\"formBtn cancelBtn\" onClick={toggleEditing}>\r\n                Cancel\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {tweetObj.attachmentUrl ? (\r\n            <>\r\n              <h4 className=\"tweet_attachment\">{tweetObj.text}</h4>\r\n              <img src={tweetObj.attachmentUrl} />\r\n              {/* 오너일때만 버튼 표기 */}\r\n              {isOwner && (\r\n                <div className=\"tweet_actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h4>{tweetObj.text}</h4>\r\n              {/* 오너일때만 버튼 표기 */}\r\n              {isOwner && (\r\n                <div className=\"tweet_actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { useState } from \"react\";\r\nimport { storageService, dbService } from \"fBase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n\r\n    if (tweet === \"\") {\r\n      return;\r\n    }\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n\r\n    // 파일 읽기 끝나면 finidhedEvent를 받는다.\r\n    reader.onloadend = (finishedEvent) => {\r\n      console.log(finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile); // 파일 읽기\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\r\n      <div className=\"factoryInput_container\">\r\n        <input\r\n          className=\"factoryInput_input\"\r\n          type=\"text\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          placeholder=\"내용을 입력하세요.\"\r\n          maxLength={120}\r\n        />\r\n        <input className=\"factoryInput_arrow\" type=\"submit\" value=\"&rarr;\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput_label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm_attachment\">\r\n          <img src={attachment} style={{ backgroundImage: attachment }} />\r\n          <div className=\"factoryForm_clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // DB에 이벤트 발생 시\r\n    dbService\r\n      .collection(\"tweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const tweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTweets(tweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService } from \"fBase\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"profileForm\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"formInput\"\r\n          type=\"text\"\r\n          autoFocus\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          placeholder=\"Display name\"\r\n        />\r\n        <input\r\n          className=\"formBtn\"\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}